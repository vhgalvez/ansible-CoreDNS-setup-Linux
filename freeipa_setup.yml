---
- name: Instalación y configuración de FreeIPA como servidor DNS en Rocky Linux
  hosts: freeipa
  become: true
  vars:
    hostname: "freeipa1.cefaslocalserver.com"
    ip_address: "10.17.3.11"
    domain_name: "cefaslocalserver.com"
    realm_name: "CEFASLOCALSERVER.COM"
    forwarder_dns: "8.8.8.8"
    dir_manager_password: "12345678" # Cambia esta contraseña a una segura
    admin_password: "12345678" # Cambia esta contraseña a una segura
    dns_records:
      - { name: "freeipa1", ip: "10.17.3.11" }
      - { name: "bootstrap1", ip: "10.17.3.14" }
      - { name: "master1", ip: "10.17.4.21" }
      - { name: "master2", ip: "10.17.4.22" }
      - { name: "master3", ip: "10.17.4.23" }
      - { name: "worker1", ip: "10.17.4.24" }
      - { name: "worker2", ip: "10.17.4.25" }
      - { name: "worker3", ip: "10.17.4.26" }
      - { name: "bootstrap", ip: "10.17.4.27" }
      - { name: "bastion1", ip: "192.168.0.20" }
      - { name: "load_balancer1", ip: "10.17.3.12" }
      - { name: "postgresql1", ip: "10.17.3.13" }
      - { name: "storage1-rook-ceph", ip: "10.17.3.14" }

  tasks:
    - name: Actualizar el sistema
      ansible.builtin.yum:
        name: "*"
        state: latest
      tags: update_system

    - name: Configurar el nombre de host
      ansible.builtin.hostname:
        name: "{{ hostname }}"
      tags: set_hostname

    - name: Instalar FreeIPA y servidor DNS
      ansible.builtin.yum:
        name:
          - ipa-server
          - ipa-server-dns
        state: present
      tags: install_freeipa

    - name: Ejecutar el script de instalación de FreeIPA
      ansible.builtin.shell: |
        ipa-server-install --unattended \
        --hostname="{{ hostname }}" \
        --ip-address="{{ ip_address }}" \
        --domain="{{ domain_name }}" \
        --realm="{{ realm_name }}" \
        --setup-dns \
        --forwarder="{{ forwarder_dns }}" \
        -p "{{ dir_manager_password }}" \
        -a "{{ admin_password }}"
      tags: install_script

    - name: Habilitar y arrancar el servicio named
      ansible.builtin.systemd:
        name: named
        enabled: true
        state: started
      tags: enable_named

    - name: Configurar reenvío de DNS en FreeIPA
      ansible.builtin.shell: |
        echo "{{ admin_password }}" | kinit admin
        ipa dnsconfig-mod --forwarder={{ forwarder_dns }}
      tags: configure_dns

    - name: Deshabilitar DNSSEC en named config
      ansible.builtin.lineinfile:
        path: /etc/named/ipa-options-ext.conf
        line: "dnssec-validation no;"
        state: present
        insertafter: "listen-on-v6 { any; };"
      tags: dns_config

    - name: Permitir recursión para todas las redes en named config
      ansible.builtin.lineinfile:
        path: /etc/named/ipa-options-ext.conf
        line: "allow-recursion { any; };"
        state: present
        insertafter: "dnssec-validation no;"
      tags: dns_config

    - name: Reiniciar servicio DNS
      ansible.builtin.systemd:
        name: named
        state: restarted
      tags: restart_dns

    - name: Configurar firewall para permitir tráfico DNS
      ansible.builtin.firewalld:
        port: "{{ item }}"
        permanent: true
        state: enabled
      loop:
        - 53/udp
        - 53/tcp
      notify:
        - Reload firewalld
      tags: firewall

    - name: Autenticarse con Kerberos para agregar registros DNS
      ansible.builtin.shell: |
        echo "{{ admin_password }}" | kinit admin
      register: kerberos_auth
      changed_when: false
      tags: auth_kerberos

    - name: Añadir registros DNS si no existen
      loop: "{{ dns_records }}"
      ansible.builtin.shell: |
        ipa dnsrecord-find {{ domain_name }} {{ item.name }} --a-rec={{ item.ip }} || \
        ipa dnsrecord-add {{ domain_name }} {{ item.name }} --a-rec {{ item.ip }}
      ignore_errors: yes
      tags: add_dns_records

  handlers:
    - name: Reload firewalld
      ansible.builtin.systemd:
        name: firewalld
        state: reloaded