---
- name: Instalación y configuración de BIND DNS en AlmaLinux
  hosts: freeipa_servers
  become: true
  vars:
    domain_name: "cefaslocalserver.com"
    dns_forwarders: "8.8.8.8; 8.8.4.4;"
    dns_records:
      - { name: "master1", ip: "10.17.4.21" }
      - { name: "master2", ip: "10.17.4.22" }
      - { name: "master3", ip: "10.17.4.23" }
      - { name: "worker1", ip: "10.17.4.24" }
      - { name: "worker2", ip: "10.17.4.25" }
      - { name: "worker3", ip: "10.17.4.26" }
      - { name: "storage1", ip: "10.17.4.27" }
      - { name: "freeipa1", ip: "10.17.3.11" }
      - { name: "loadbalancer1", ip: "10.17.3.12" }
      - { name: "loadbalancer2", ip: "10.17.3.13" }
      - { name: "postgresql1", ip: "10.17.3.14" }
      - { name: "k8s-api-lb", ip: "10.17.5.10" }

  tasks:
    - name: Verificar si FreeIPA está instalado
      ansible.builtin.command: "rpm -q ipa-server"
      register: freeipa_installed
      ignore_errors: true
      changed_when: false

    - name: Desinstalar FreeIPA si está instalado
      ansible.builtin.command: "ipa-server-install --uninstall -U"
      when: freeipa_installed.rc == 0
      ignore_errors: true

    - name: Verificar si BIND está instalado
      ansible.builtin.command: "rpm -q bind"
      register: bind_installed
      ignore_errors: true
      changed_when: false

    - name: Desinstalar BIND si está instalado
      ansible.builtin.yum:
        name: bind
        state: absent
      when: bind_installed.rc == 0

    - name: Eliminar archivos residuales de FreeIPA y BIND
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/ipa
        - /var/lib/ipa
        - /var/log/ipa
        - /var/named
        - /etc/named.conf
        - /etc/named
        - /var/lib/dirsrv
        - /var/log/named

    - name: Actualizar el sistema
      ansible.builtin.yum:
        name: "*"
        state: latest
        update_cache: true

    - name: Instalar paquetes necesarios para BIND DNS
      ansible.builtin.yum:
        name:
          - bind
          - bind-utils
        state: present

    - name: Configurar named.conf
      ansible.builtin.template:
        src: templates/named.conf.j2
        dest: /etc/named.conf
        owner: root
        group: named
        mode: '0644'

    - name: Configurar zona DNS en named
      ansible.builtin.template:
        src: templates/db.zone.j2
        dest: /var/named/db.{{ domain_name }}
        owner: named
        group: named
        mode: '0644'

    - name: Verificar sintaxis de la zona DNS
      ansible.builtin.command:
        cmd: "named-checkzone {{ domain_name }} /var/named/db.{{ domain_name }}"
      register: zone_check
      changed_when: false
      ignore_errors: false

    - name: Habilitar y arrancar el servicio named
      ansible.builtin.systemd:
        name: named
        enabled: true
        state: started

    - name: Instalar python3-firewall (para usar firewalld module)
      ansible.builtin.yum:
        name: python3-firewall
        state: present

    - name: Instalar firewalld si no está presente
      ansible.builtin.yum:
        name: firewalld
        state: present

    - name: Asegurarse de que firewalld está habilitado y corriendo
      ansible.builtin.systemd:
        name: firewalld
        enabled: true
        state: started

    - name: Abrir puertos en el firewall para DNS
      ansible.builtin.firewalld:
        port: "{{ item }}"
        permanent: true
        state: enabled
      loop:
        - 53/tcp
        - 53/udp
      notify: Restart firewalld

  handlers:
    - name: Restart firewalld
      ansible.builtin.systemd:
        name: firewalld
        state: reloaded