---
- name: Instalación y configuración de FreeIPA como servidor DNS en AlmaLinux
  hosts: freeipa_servers
  become: true
  vars:
    hostname: "freeipa1.cefaslocalserver.com"
    ip_address: "10.17.3.11"
    domain_name: "cefaslocalserver.com"
    realm_name: "CEFASLOCALSERVER.COM"
    forwarder_dns: "8.8.8.8"
    dir_manager_password: "12345678"
    admin_password: "12345678"
    dns_records:
      - { name: "master1", ip: "10.17.4.21" }
      - { name: "master2", ip: "10.17.4.22" }
      - { name: "master3", ip: "10.17.4.23" }
      - { name: "worker1", ip: "10.17.4.24" }
      - { name: "worker2", ip: "10.17.4.25" }
      - { name: "worker3", ip: "10.17.4.26" }
      - { name: "storage1", ip: "10.17.4.27" }
      - { name: "freeipa1", ip: "10.17.3.11" }
      - { name: "loadbalancer1", ip: "10.17.3.12" }
      - { name: "loadbalancer2", ip: "10.17.3.13" }
      - { name: "postgresql1", ip: "10.17.3.14" }
      - { name: "bastion1", ip: "192.168.0.20" }

  tasks:
    - name: Verificar si FreeIPA ya está instalado
      ansible.builtin.stat:
        path: /etc/ipa/default.conf
      register: freeipa_installed
      tags: check_freeipa

    - name: Desinstalar FreeIPA si ya está instalado
      ansible.builtin.command:
        cmd: ipactl stop && ipa-server-install --uninstall -U
      when: freeipa_installed.stat.exists
      tags: uninstall_freeipa
      ignore_errors: true

    - name: Eliminar archivos residuales de FreeIPA
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/ipa
        - /var/lib/ipa
        - /var/log/ipa
        - /var/named/dns
      when: freeipa_installed.stat.exists
      tags: cleanup_files

    - name: Crear directorios faltantes para instalación de FreeIPA
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /var/lib/ipa/sysrestore
        - /var/lib/ipa/sysupgrade
        - /var/log/ipa
      tags: create_dirs

    - name: Crear archivos de estado faltantes
      ansible.builtin.file:
        path: "{{ item }}"
        state: touch
        mode: '0644'
      loop:
        - /var/lib/ipa/sysupgrade/sysupgrade.state
        - /var/lib/ipa/sysrestore/sysrestore.state
      tags: create_files

    - name: Actualizar el sistema si FreeIPA no está instalado
      ansible.builtin.yum:
        name: "*"
        state: latest
      when: not freeipa_installed.stat.exists
      tags: update_system

    - name: Instalar FreeIPA y dependencias necesarias
      ansible.builtin.yum:
        name:
          - ipa-server
          - ipa-server-dns
          - epel-release
          - dnf-plugins-core
          - bind
          - bind-utils
          - chrony
          - krb5-server
          - krb5-libs
          - krb5-workstation
          - oddjob
          - oddjob-mkhomedir
          - sssd
          - sssd-tools
          - policycoreutils-python-utils
          - mod_ssl
          - httpd
          - python3-libselinux
        state: present
        update_cache: true
      tags: install_freeipa

    - name: Verificar si ipa-server-install está instalado
      ansible.builtin.stat:
        path: /usr/sbin/ipa-server-install
      register: ipa_server_check
      failed_when: not ipa_server_check.stat.exists
      tags: verify_install

    - name: Configurar el nombre de host
      ansible.builtin.hostname:
        name: "{{ hostname }}"
      tags: set_hostname

    - name: Ejecutar la instalación de FreeIPA
      ansible.builtin.command:
        cmd: >
          ipa-server-install --unattended
          --hostname="{{ hostname }}"
          --ip-address="{{ ip_address }}"
          --domain="{{ domain_name }}"
          --realm="{{ realm_name }}"
          --setup-dns
          --forwarder="{{ forwarder_dns }}"
          -p "{{ dir_manager_password }}"
          -a "{{ admin_password }}"
      tags: install_script

    - name: Esperar 10 segundos para asegurar que FreeIPA está completamente levantado
      ansible.builtin.pause:
        seconds: 10
      tags: wait_for_ipa

    - name: Habilitar y arrancar el servicio named
      ansible.builtin.systemd:
        name: named
        enabled: true
        state: started
      tags: enable_named

    - name: Verificar autenticación Kerberos
      ansible.builtin.command: "klist -s"
      register: kerberos_status
      ignore_errors: true
      changed_when: false

    - name: Autenticarse con Kerberos
      ansible.builtin.shell: |
        echo "{{ admin_password }}" | kinit admin
      when: kerberos_status.rc != 0
      changed_when: false
      tags: auth_kerberos

    - name: Configurar reenvío de DNS en FreeIPA
      ansible.builtin.command:
        cmd: ipa dnsconfig-mod --forwarder={{ forwarder_dns }}
      tags: configure_dns

    - name: Deshabilitar DNSSEC en la configuración de named
      ansible.builtin.lineinfile:
        path: /etc/named/ipa-options-ext.conf
        line: "dnssec-validation no;"
        state: present
        insertafter: "listen-on-v6 { any; };"
      tags: dns_config

    - name: Permitir recursión para todas las redes en la configuración de named
      ansible.builtin.lineinfile:
        path: /etc/named/ipa-options-ext.conf
        line: "allow-recursion { any; };"
        state: present
        insertafter: "dnssec-validation no;"
      tags: dns_config

    - name: Reiniciar servicio DNS
      ansible.builtin.systemd:
        name: named
        state: restarted
      tags: restart_dns

    - name: Configurar firewall para permitir tráfico DNS
      ansible.builtin.firewalld:
        port: "{{ item }}"
        permanent: true
        state: enabled
      loop:
        - 53/udp
        - 53/tcp
      notify: Reload firewalld
      tags: firewall

    - name: Añadir registros DNS en FreeIPA
      loop: "{{ dns_records }}"
      ansible.builtin.command:
        cmd: ipa dnsrecord-add {{ domain_name }} {{ item.name }} --a-rec={{ item.ip }}
      ignore_errors: true
      tags: add_dns_records

    - name: Configurar alias DNS para balanceadores (round-robin DNS)
      ansible.builtin.command:
        cmd: ipa dnsrecord-add {{ domain_name }} loadbalancer --a-rec 10.17.3.12 --a-rec 10.17.3.13
      tags: configure_dns_alias

  handlers:
    - name: Reload firewalld
      ansible.builtin.systemd:
        name: firewalld
        state: reloaded