# CoreDNS_setup.yml
---
- name: Actualizar y configurar CoreDNS en la máquina virtual
  hosts: freeipa_servers
  become: true
  gather_facts: yes

  tasks:
    # 1. Actualizar el sistema
    - name: Actualizar el sistema y todos los paquetes
      ansible.builtin.yum:
        name: "*"
        state: latest
        update_cache: true

    # 2. Instalar Docker si no está instalado
    - name: Verificar si Docker está instalado
      ansible.builtin.command:
        cmd: docker --version
      register: docker_installed
      ignore_errors: true

    - name: Instalar Docker si no está instalado
      ansible.builtin.yum:
        name: docker
        state: present
      when: docker_installed.rc != 0

    - name: Iniciar y habilitar Docker
      ansible.builtin.systemd:
        name: docker
        enabled: true
        state: started

    # 3. Configurar CoreDNS en un contenedor Docker
    - name: Descargar la imagen de CoreDNS
      ansible.builtin.docker_image:
        name: coredns/coredns
        source: pull

    - name: Ejecutar CoreDNS en un contenedor Docker
      ansible.builtin.docker_container:
        name: coredns
        image: coredns/coredns
        state: started
        ports:
          - "53:53/udp"
          - "53:53/tcp"
        volumes:
          - /etc/coredns:/etc/coredns
        restart_policy: unless-stopped

    # 4. Crear archivo de configuración CoreDNS usando plantilla
    - name: Crear archivo de configuración de CoreDNS (Corefile)
      ansible.builtin.template:
        src: templates/Corefile.j2
        dest: /etc/coredns/Corefile
        owner: root
        group: root
        mode: '0644'
    
    # 5. Verificar si el puerto 53 está abierto en el firewall para CoreDNS
    - name: Abrir puertos 53 en firewalld
      ansible.builtin.firewalld:
        port: "{{ item }}"
        permanent: true
        state: enabled
      loop:
        - 53/tcp
        - 53/udp
      notify: Restart firewalld

  handlers:
    - name: Restart firewalld
      ansible.builtin.systemd:
        name: firewalld
        state: reloaded